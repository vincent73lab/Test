package Dice;
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*<pre>
 * Class        DiceDriver
 * File         DiceDriver.java
 * Description  A class representing the GUI used in a rolling dice simulation.
 * Project      Dice Simulation
 * Environment  PC, Windows 10, NetBeans IDE 11.3, jdk 1.8.0_241
 * Date         11/21/2020

 * @author      <i>FALLDIUSA ESTAVAN</i>
 * @version: 	%1% %2%
 * @see:     	javax.swing
 * @see:     	java.text.DecimalFormat;
  </pre>
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
import javax.swing.*;
import java.awt.*;

public class DiceDriver extends JFrame
{
    // Class instance variables
    int total = 0, freq1 = 0, freq2 = 0, freq3 = 0, freq4 = 0, freq5 = 0, freq6 = 0;
    double perc1 = 0.0, perc2 = 0.0, perc3 = 0.0, perc4 = 0.0, perc5 = 0.0, perc6 = 0.0;
    int[] freq = new int[6];
    Die die1 = new Die(Die.roll());
    Die die2 = new Die(Die.roll());

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Constructor  DiceDriver()
     * Description  Default constructor. Builds the GUI, creates instance of 
     *              the class, sets the rollJButton as the default button, and 
     *              sets die2.png as icon fo the GUI
     * @author      <i>Niko Culevski</i>
     * @see         java.awt.Toolkit
     * Date         4/3/2020
     * History Log  7/18/2018
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public DiceDriver()
    {
	initComponents();
        //set icon for form
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/Images/die2.png"));       
        //center the form at start
        setLocationRelativeTo(null);        
        //set rollButton as default
        this.getRootPane().setDefaultButton(rollJButton);        
        //set background color
        this.getContentPane().setBackground(Color.red);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        radioButtonGroup = new javax.swing.ButtonGroup();
        menuButtonGroup = new javax.swing.ButtonGroup();
        choiceJPanel = new javax.swing.JPanel();
        oneJRadioButton = new javax.swing.JRadioButton();
        fiveJRadioButton = new javax.swing.JRadioButton();
        tenJRadioButton = new javax.swing.JRadioButton();
        hundredJRadioButton = new javax.swing.JRadioButton();
        otherJRadioButton = new javax.swing.JRadioButton();
        otherJTextField = new javax.swing.JTextField();
        displayJPanel = new javax.swing.JPanel();
        die1JLabel = new javax.swing.JLabel();
        die2JLabel = new javax.swing.JLabel();
        controlJPanel = new javax.swing.JPanel();
        rollJButton = new javax.swing.JButton();
        clearJButton = new javax.swing.JButton();
        printJButton = new javax.swing.JButton();
        quitJButton = new javax.swing.JButton();
        resultsJPanel = new javax.swing.JPanel();
        resultsJTextArea = new javax.swing.JTextArea();
        dieJMenuBar = new javax.swing.JMenuBar();
        fileJMenu = new javax.swing.JMenu();
        clearJMenuItem = new javax.swing.JMenuItem();
        printJMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitJMenuItem = new javax.swing.JMenuItem();
        actionJMenu = new javax.swing.JMenu();
        selectMenu = new javax.swing.JMenu();
        oneJRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        fiveJRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        tenJRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        hundredJRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        otherJRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        rollJMenuItem = new javax.swing.JMenuItem();
        helpJMenu = new javax.swing.JMenu();
        aboutJMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dice Simulation");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                exitForm(evt);
            }
        });

        choiceJPanel.setLayout(new java.awt.GridLayout(2, 3, 5, 5));

        radioButtonGroup.add(oneJRadioButton);
        oneJRadioButton.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        oneJRadioButton.setMnemonic('n');
        oneJRadioButton.setSelected(true);
        oneJRadioButton.setText("One");
        oneJRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                oneJRadioButtonActionPerformed(evt);
            }
        });
        choiceJPanel.add(oneJRadioButton);

        radioButtonGroup.add(fiveJRadioButton);
        fiveJRadioButton.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        fiveJRadioButton.setMnemonic('v');
        fiveJRadioButton.setText("Five");
        fiveJRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fiveJRadioButtonActionPerformed(evt);
            }
        });
        choiceJPanel.add(fiveJRadioButton);

        radioButtonGroup.add(tenJRadioButton);
        tenJRadioButton.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        tenJRadioButton.setMnemonic('e');
        tenJRadioButton.setText("Ten");
        tenJRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tenJRadioButtonActionPerformed(evt);
            }
        });
        choiceJPanel.add(tenJRadioButton);

        radioButtonGroup.add(hundredJRadioButton);
        hundredJRadioButton.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        hundredJRadioButton.setMnemonic('d');
        hundredJRadioButton.setText("Hundred");
        hundredJRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                hundredJRadioButtonActionPerformed(evt);
            }
        });
        choiceJPanel.add(hundredJRadioButton);

        radioButtonGroup.add(otherJRadioButton);
        otherJRadioButton.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        otherJRadioButton.setMnemonic('O');
        otherJRadioButton.setText("Other");
        otherJRadioButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        otherJRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                otherJRadioButtonActionPerformed(evt);
            }
        });
        choiceJPanel.add(otherJRadioButton);

        otherJTextField.setEditable(false);
        otherJTextField.setColumns(8);
        otherJTextField.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        otherJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        choiceJPanel.add(otherJTextField);

        getContentPane().add(choiceJPanel, java.awt.BorderLayout.NORTH);

        displayJPanel.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        die1JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/die2.png"))); // NOI18N
        displayJPanel.add(die1JLabel);

        die2JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/die5.png"))); // NOI18N
        displayJPanel.add(die2JLabel);

        getContentPane().add(displayJPanel, java.awt.BorderLayout.CENTER);

        controlJPanel.setLayout(new java.awt.GridLayout(1, 4, 5, 5));

        rollJButton.setBackground(new java.awt.Color(0, 204, 204));
        rollJButton.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        rollJButton.setMnemonic('R');
        rollJButton.setText("Roll");
        rollJButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rollJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(rollJButton);

        clearJButton.setBackground(new java.awt.Color(0, 204, 204));
        clearJButton.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        clearJButton.setMnemonic('C');
        clearJButton.setText("Clear");
        clearJButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                clearJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(clearJButton);

        printJButton.setBackground(new java.awt.Color(0, 204, 204));
        printJButton.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        printJButton.setMnemonic('P');
        printJButton.setText("Print");
        printJButton.setToolTipText("Print JTextArea");
        printJButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                printJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(printJButton);

        quitJButton.setBackground(new java.awt.Color(0, 204, 204));
        quitJButton.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        quitJButton.setMnemonic('Q');
        quitJButton.setText("Quit");
        quitJButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                quitJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(quitJButton);

        getContentPane().add(controlJPanel, java.awt.BorderLayout.SOUTH);

        resultsJTextArea.setEditable(false);
        resultsJTextArea.setFont(new java.awt.Font("Courier", 0, 10)); // NOI18N
        resultsJTextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        resultsJTextArea.setPreferredSize(new java.awt.Dimension(150, 100));
        resultsJPanel.add(resultsJTextArea);

        getContentPane().add(resultsJPanel, java.awt.BorderLayout.EAST);

        fileJMenu.setMnemonic('F');
        fileJMenu.setText("File");

        clearJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        clearJMenuItem.setMnemonic('C');
        clearJMenuItem.setText("Clear");
        clearJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                clearJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(clearJMenuItem);

        printJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        printJMenuItem.setMnemonic('P');
        printJMenuItem.setText("Print Form");
        printJMenuItem.setToolTipText("Print GUI");
        printJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                printJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(printJMenuItem);
        fileJMenu.add(jSeparator1);

        exitJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        exitJMenuItem.setMnemonic('x');
        exitJMenuItem.setText("Exit");
        exitJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exitJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(exitJMenuItem);

        dieJMenuBar.add(fileJMenu);

        actionJMenu.setMnemonic('A');
        actionJMenu.setText("Action");

        selectMenu.setMnemonic('s');
        selectMenu.setText("Select");

        menuButtonGroup.add(oneJRadioButtonMenuItem);
        oneJRadioButtonMenuItem.setSelected(true);
        oneJRadioButtonMenuItem.setText("One");
        oneJRadioButtonMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                oneJRadioButtonMenuItemActionPerformed(evt);
            }
        });
        selectMenu.add(oneJRadioButtonMenuItem);

        menuButtonGroup.add(fiveJRadioButtonMenuItem);
        fiveJRadioButtonMenuItem.setText("Five");
        fiveJRadioButtonMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fiveJRadioButtonMenuItemActionPerformed(evt);
            }
        });
        selectMenu.add(fiveJRadioButtonMenuItem);

        menuButtonGroup.add(tenJRadioButtonMenuItem);
        tenJRadioButtonMenuItem.setText("Ten");
        tenJRadioButtonMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tenJRadioButtonMenuItemActionPerformed(evt);
            }
        });
        selectMenu.add(tenJRadioButtonMenuItem);

        menuButtonGroup.add(hundredJRadioButtonMenuItem);
        hundredJRadioButtonMenuItem.setText("Hundred");
        hundredJRadioButtonMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                hundredJRadioButtonMenuItemActionPerformed(evt);
            }
        });
        selectMenu.add(hundredJRadioButtonMenuItem);

        menuButtonGroup.add(otherJRadioButtonMenuItem);
        otherJRadioButtonMenuItem.setText("Other");
        otherJRadioButtonMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                otherJRadioButtonMenuItemActionPerformed(evt);
            }
        });
        selectMenu.add(otherJRadioButtonMenuItem);

        actionJMenu.add(selectMenu);

        rollJMenuItem.setMnemonic('R');
        rollJMenuItem.setText("Roll");
        rollJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rollJMenuItemActionPerformed(evt);
            }
        });
        actionJMenu.add(rollJMenuItem);

        dieJMenuBar.add(actionJMenu);

        helpJMenu.setMnemonic('H');
        helpJMenu.setText("Help");

        aboutJMenuItem.setMnemonic('A');
        aboutJMenuItem.setText("About");
        aboutJMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                aboutJMenuItemActionPerformed(evt);
            }
        });
        helpJMenu.add(aboutJMenuItem);

        dieJMenuBar.add(helpJMenu);

        setJMenuBar(dieJMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       hundredJRadioButtonActionPerformed()
     * Description  Event handler for rolling the to dice 100 times. Clears the
     *              otherJTextField and sets it not editable, selects the 
     *              hundredJRadioButtonMenuItem, and calls 
     *              rollJButtonActionPerformed event handler.
     * @param       evt java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018    
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
    private void hundredJRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_hundredJRadioButtonActionPerformed
    {//GEN-HEADEREND:event_hundredJRadioButtonActionPerformed

    }//GEN-LAST:event_hundredJRadioButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       tenJRadioButtonActionPerformed()
     * Description  Event handler for rolling the to dice 10 times. Clears the
     *              otherJTextField and sets it not editable, selects the 
     *              tenJRadioButtonActionPerformed, and calls 
     *              rollJButtonActionPerformed event handler.
     * @param       evt java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018    
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void tenJRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tenJRadioButtonActionPerformed
    {//GEN-HEADEREND:event_tenJRadioButtonActionPerformed

    }//GEN-LAST:event_tenJRadioButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       fiveJRadioButtonActionPerformed()
     * Description  Event handler for rolling the to dice 5 times. Clears the
     *              otherJTextField and sets it not editable, selects the 
     *              fiveJRadioButtonActionPerformed, and calls 
     *              rollJButtonActionPerformed event handler.
     * @param       evt java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018    
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void fiveJRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fiveJRadioButtonActionPerformed
    {//GEN-HEADEREND:event_fiveJRadioButtonActionPerformed

    }//GEN-LAST:event_fiveJRadioButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       oneJRadioButtonActionPerformed()
     * Description  Event handler for rolling the to dice 1 time. Clears the
     *              otherJTextField and sets it not editable, selects the 
     *              oneJRadioButtonActionPerformed, and calls 
     *              rollJButtonActionPerformed event handler.
     * @param       evt java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018    
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void oneJRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_oneJRadioButtonActionPerformed
    {//GEN-HEADEREND:event_oneJRadioButtonActionPerformed

    }//GEN-LAST:event_oneJRadioButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       clearJButtonActionPerformed()
     * Description  Event handler reset form to its original state and to reset 
     *              all class instance variables.
     * @param       evt java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018    
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void clearJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearJButtonActionPerformed
    {//GEN-HEADEREND:event_clearJButtonActionPerformed

	total = freq1 = freq2 =  freq3 =  freq4 =  freq5 =  freq6 = 0;
	perc1 =  perc2 =  perc3 =  perc4 =  perc5 =  perc6 = 0.0;
        otherJTextField.setEditable(false);
	oneJRadioButton.setSelected(true);
	resultsJTextArea.setText("");
	rollJButton.requestFocus();
	
    }//GEN-LAST:event_clearJButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       quitJButtonActionPerformed()
     * Description  Event handler to end the application
     * @param       evt java.awt.event.ActionEvent
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
    private void quitJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_quitJButtonActionPerformed
    {//GEN-HEADEREND:event_quitJButtonActionPerformed
	System.exit(0);
    }//GEN-LAST:event_quitJButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       otherJRadioButtonActionPerformed()
     * Description  Event handler for selecting the otherJRadioButton: when
     *              selected it sets the otherJTextField to editable and places
     *              cursor inside of it; otherwise it clears the 
     *              otherJTextField and sets it not editable.
     * @param       evt java.awt.event.ActionEvent
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void otherJRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_otherJRadioButtonActionPerformed
    {//GEN-HEADEREND:event_otherJRadioButtonActionPerformed

    }//GEN-LAST:event_otherJRadioButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       otherJTextFieldActionPerformed()
     * Description  Event handler for pressing the Roll JButton. It rolls the
     *              two dice selected number of times and displays results.
     * @param       evt java.awt.event.ActionEvent
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void rollJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rollJButtonActionPerformed
    {//GEN-HEADEREND:event_rollJButtonActionPerformed
        final int MAX = 1000000000;
//        try{
//           // int counter = getCount();
//               if (counter < 1 || counter > MAX)
//            throw new NumberFormatException();
//        for(int i = 0; i < counter; i++)
//        {total += 2;
//    die1.setSide(Die.roll());
//    die2.setSide(Die.roll());
//    freq[die1.getSide() -1]++;
//    freq[die2.getSide() -1]++;}
//        for(int i = 0; i < freq.length; i++)
//        {
//           // percent[i] = (double)freq[i]/total;}
//        //setLabel(die1JLabel, "src/Images/", die1.getSide());
//        //setLabel(die2JLabel, "src/Images/", die2.getSide());
//        //displayResults();
//    }
//catch(java.lang.NumberFormatException e)
//{
//    JOptionPane.showMessageDialog(null, "Enter a positive integer!","Input Error!", JOptionPane.ERROR_MESSAGE);
//    otherJTextField.selectAll();
//}
    }//GEN-LAST:event_rollJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       setLabel()
     * Description  Method to set the correct image on the given labels.
     * @param       label Jlabel
     * @param       folder String
     * @param       num int
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       setFrequency()
     * Description  Method to set the frequency of the dice rolls.
     * @param       num int
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       getCount()
     * Description  Method to return number of rolls selected.
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       displayResults()
     * Description  Method to display results
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       exitForm()
     * Description  End the application.
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void exitForm(java.awt.event.WindowEvent evt)//GEN-FIRST:event_exitForm
    {
	System.exit(0);
    }//GEN-LAST:event_exitForm
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       aboutJMenuItemActionPerformed()
     * Description  Show the About form.
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void aboutJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_aboutJMenuItemActionPerformed
    {//GEN-HEADEREND:event_aboutJMenuItemActionPerformed

    }//GEN-LAST:event_aboutJMenuItemActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       printJButtonActionPerformed()
     * Description  Print the content of the resultsJTextArea
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void printJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_printJButtonActionPerformed
    {//GEN-HEADEREND:event_printJButtonActionPerformed

    }//GEN-LAST:event_printJButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       clearJMenuItemActionPerformed()
     * Description  Event handler that calls clearJButtonActionPerformed to
     *              clear form.
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void clearJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearJMenuItemActionPerformed
    {//GEN-HEADEREND:event_clearJMenuItemActionPerformed
        clearJButtonActionPerformed(evt);
    }//GEN-LAST:event_clearJMenuItemActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       printJMenuItemActionPerformed()
     * Description  Event handler that calls the printComponent method of the
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void printJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_printJMenuItemActionPerformed
    {//GEN-HEADEREND:event_printJMenuItemActionPerformed
        //printJButtonActionPerformed(evt);
        //http://www.apl.jhu.edu/~hall/java/Swing-Tutorial/Swing-Tutorial-Printing.html
        PrintUtilities.printComponent(this);
    }//GEN-LAST:event_printJMenuItemActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       exitJMenuItemActionPerformed()
     * Description  Event handler that calls the quitJButtonActionPerformed
     *              event handler to end the application.
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void exitJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitJMenuItemActionPerformed
    {//GEN-HEADEREND:event_exitJMenuItemActionPerformed
        quitJButtonActionPerformed(evt);
    }//GEN-LAST:event_exitJMenuItemActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       rollJMenuItemActionPerformed()
     * Description  Event handler that calls the rollJButtonActionPerformed
     *              event handler to perform the simulation.
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void rollJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rollJMenuItemActionPerformed
    {//GEN-HEADEREND:event_rollJMenuItemActionPerformed
        // roll the dice
        rollJButtonActionPerformed(evt);
    }//GEN-LAST:event_rollJMenuItemActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       oneJRadioButtonMenuItemActionPerformed()
     * Description  Event handler that calls the doClick method of the 
     *              oneJRadioButton.
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void oneJRadioButtonMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneJRadioButtonMenuItemActionPerformed
        // Call oneJRadioButtonActionPerformed
 
    }//GEN-LAST:event_oneJRadioButtonMenuItemActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       fiveJRadioButtonMenuItemActionPerformed()
     * Description  Event handler that calls the doClick method of the 
     *              fiveJRadioButton.
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void fiveJRadioButtonMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveJRadioButtonMenuItemActionPerformed
        // Call fiveJRadioButtonActionPerformed        

    }//GEN-LAST:event_fiveJRadioButtonMenuItemActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       tenJRadioButtonMenuItemActionPerformed()
     * Description  Event handler that calls the doClick method of the 
     *              tenJRadioButton.
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void tenJRadioButtonMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenJRadioButtonMenuItemActionPerformed
        // Call oneJRadioButtonActionPerformed
 
    }//GEN-LAST:event_tenJRadioButtonMenuItemActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       hundredJRadioButtonMenuItemActionPerformed()
     * Description  Event handler that calls the doClick method of the 
     *              hundredJRadioButton.
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void hundredJRadioButtonMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hundredJRadioButtonMenuItemActionPerformed
        // Call oneJRadioButtonActionPerformed

    }//GEN-LAST:event_hundredJRadioButtonMenuItemActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       otherJRadioButtonMenuItemActionPerformed()
     * Description  Event handler that calls the doClick method of the 
     *              otherJRadioButton.
     * @see         java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void otherJRadioButtonMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherJRadioButtonMenuItemActionPerformed
        // Call oneJRadioButtonActionPerformed

    }//GEN-LAST:event_otherJRadioButtonMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
     * Method       main()
     * Description  Show the Splash scree and call the contructor to create 
     *              an instance of the form.
     * @param       args are the command line strings
     * @author      <i>Niko Culevski</i>
     * Date         4/3/2020
     * History Log  7/18/2018  
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public static void main(String args[])
    {
        Splash mySplash = new Splash(2700);
        mySplash.showSplash();
	DiceDriver myDiceDriver = new DiceDriver();

	myDiceDriver.setVisible(true);
	myDiceDriver.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JMenuItem aboutJMenuItem;
    public javax.swing.JMenu actionJMenu;
    public javax.swing.JPanel choiceJPanel;
    public javax.swing.JButton clearJButton;
    public javax.swing.JMenuItem clearJMenuItem;
    public javax.swing.JPanel controlJPanel;
    public javax.swing.JLabel die1JLabel;
    public javax.swing.JLabel die2JLabel;
    public javax.swing.JMenuBar dieJMenuBar;
    public javax.swing.JPanel displayJPanel;
    public javax.swing.JMenuItem exitJMenuItem;
    public javax.swing.JMenu fileJMenu;
    public javax.swing.JRadioButton fiveJRadioButton;
    public javax.swing.JRadioButtonMenuItem fiveJRadioButtonMenuItem;
    public javax.swing.JMenu helpJMenu;
    public javax.swing.JRadioButton hundredJRadioButton;
    public javax.swing.JRadioButtonMenuItem hundredJRadioButtonMenuItem;
    public javax.swing.JPopupMenu.Separator jSeparator1;
    public javax.swing.ButtonGroup menuButtonGroup;
    public javax.swing.JRadioButton oneJRadioButton;
    public javax.swing.JRadioButtonMenuItem oneJRadioButtonMenuItem;
    public javax.swing.JRadioButton otherJRadioButton;
    public javax.swing.JRadioButtonMenuItem otherJRadioButtonMenuItem;
    public javax.swing.JTextField otherJTextField;
    public javax.swing.JButton printJButton;
    public javax.swing.JMenuItem printJMenuItem;
    public javax.swing.JButton quitJButton;
    public javax.swing.ButtonGroup radioButtonGroup;
    public javax.swing.JPanel resultsJPanel;
    public javax.swing.JTextArea resultsJTextArea;
    public javax.swing.JButton rollJButton;
    public javax.swing.JMenuItem rollJMenuItem;
    public javax.swing.JMenu selectMenu;
    public javax.swing.JRadioButton tenJRadioButton;
    public javax.swing.JRadioButtonMenuItem tenJRadioButtonMenuItem;
    // End of variables declaration//GEN-END:variables
}